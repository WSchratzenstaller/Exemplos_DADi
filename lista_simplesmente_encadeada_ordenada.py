# -*- coding: utf-8 -*-
"""lista_simplesmente_encadeada_ordenada.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r0RpE1OqYfrw5YDg8JRom_kkX2iV4S43
"""
class No_lista:
  def __init__(self, codigo, nome):
    self.__codigo = codigo
    self.__nome = nome
    self.__proximo = None

  def get_codigo(self):
    return self.__codigo

  def get_nome(self):
    return self.__nome

  def get_proximo(self):
    return self.__proximo

  def set_proximo(self, proximo):
    self.__proximo = proximo

class Minha_lista_encadeada_ordenada:
  def __init__(self):
    self.__inicio = None

  def push(self, codigo, nome):
    novo = No_lista(codigo, nome)
    if novo:
      if self.__inicio:
        if codigo <= self.__inicio.get_codigo():
          novo.set_proximo(self.__inicio)
          self.__inicio = novo
        else:
          proximo = self.__inicio
          while True:
            if proximo.get_proximo():
              if codigo <= proximo.get_proximo().get_codigo():
                novo.set_proximo(proximo.get_proximo())
                proximo.set_proximo(novo)
                break
              proximo = proximo.get_proximo()
            else:
              proximo.set_proximo(novo)
              break
      else:
        novo.set_proximo(None)
        self.__inicio = novo

  def pop(self, cod_remover):
    if self.__inicio:
      auxiliar = self.__inicio
      if cod_remover is auxiliar.get_codigo():
        self.__inicio = auxiliar.get_proximo()
        return
      while auxiliar.get_proximo():
        if cod_remover is auxiliar.get_proximo().get_codigo(): 
          auxiliar.set_proximo(auxiliar.get_proximo().get_proximo())
          return
        auxiliar = auxiliar.get_proximo()
      print("Código", cod_remover, "não encontrado.")
    else:
      print("Lista vazia, não pode remover.")

  def print_all(self):
    if self.__inicio:
      saida = "\n\nLista: \n"
      auxiliar = self.__inicio
      while auxiliar:
        saida += str(auxiliar.get_codigo()) + ") " + auxiliar.get_nome() + "\n"
        auxiliar = auxiliar.get_proximo()
      print(saida, "\n")
    else: 
      print("Não há estudantes na lista.")

  def print_first(self):
    print(str(self.__inicio.get_codigo()) + ") " + self.__inicio.get_nome())

  def print_last(self):
    auxiliar = self.__inicio
    while auxiliar.get_proximo():
      auxiliar = auxiliar.get_proximo()
    print(str(auxiliar.get_codigo()) + ") " + auxiliar.get_nome())

  def search(self, nome_consultado):
    if self.__inicio:
      saida = None
      auxiliar = self.__inicio
      while auxiliar:
        if auxiliar.get_nome().upper() == nome_consultado:
          saida = auxiliar.get_codigo()
          return saida
        auxiliar = auxiliar.get_proximo()
    else: 
      print("Não há estudantes na lista para consultar.")
    return saida

  def clear_all(self):
    self.__inicio = None

def main():
  op = 0 
  lista = Minha_lista_encadeada_ordenada()
  while True:
    op = int(input("Opções:\n"
                   "1 - Cadastrar estudante.\n"
                   "2 - Excluir estudante.\n"
                   "3 - Consultar lista de estudantes.\n"
                   "4 - Consultar primeiro estudante da lista.\n"
                   "5 - Consultar último estudante da lista.\n"
                   "6 - Consultar o código de determinado estudante (por nome).\n"
                   "7 - Adicionar cadastros automaticamente para teste.\n"
                   "8 - Limpar lista (remove todos).\n"
                   "9 - Sair.\n"
                   "Informe opção: \n"))
    
    if op is 1:
      codigo = int(input("Informe o código do estudante:\n"))
      nome = input("Informe o nome do estudante:\n")
      lista.push(codigo, nome)
    elif op is 2:
      cod_estudante = int(input("Informe o código do estudante que deseja remover:\n"))
      lista.pop(cod_estudante)
    elif op is 3:
       lista.print_all()
    elif op is 4:
       lista.print_first()
    elif op is 5:
       lista.print_last()
    elif op is 6:
      nome = input("Informe o nome do estudante que quer consultar:\n")
      codigo = lista.search(nome.upper())
      if codigo:
        print("O código do estudante", nome, "é:", str(codigo))
      else:
        print("Estudante de nome", nome, "não encontrado.")
    elif op is 7:
      lista.push(3, "João")
      lista.push(1, "Felipe")
      lista.push(2, "Gabriel")
      lista.push(4, "Lucas")
      lista.push(6, "William")
      lista.push(5, "Matheus")
    elif op is 8:
      lista.clear_all()
    elif op is 9:
      break
    else:
      print("Opção inválida.")

if __name__ == '__main__':
  main()